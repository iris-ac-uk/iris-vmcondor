VMCondor User's Guide
=====================

VMCondor allows users to submit HTCondor batch jobs to a pool of virtual 
machines managed by Vcycle/OpenStack or Vac at IRIS sites. This guide 
explains how to set up a client machine so you can submit jobs into the pool.

Please email vmcondor@iris.ac.uk for further clarifications or in case of
problems.

Installation with Docker 
------------------------

If you have Docker running on your client machine, you can use the 
irisacuk/iris-vmcondor image in Docker Hub to get started with a couple 
of commands.

It is recommended that you mount a volume from the host machine as 
/home/user inside the container. This should make it easier to move to 
newer versions of the image whilst retaining your own files.

On Linux or macOS, a command like this may be used to create and enter
an iris-vmcondor Docker container as a non-privileged user:

mkdir -p $HOME/iris-vmcondor-home
docker run --user user --tty --interactive \
  --volume $HOME/iris-vmcondor-home:/home/user \
  --workdir /home/user irisacuk/iris-vmcondor:latest /bin/bash --login

Installation from package repositories
--------------------------------------

The vmcondor_* commands use the HTCondor, OpenSSL and Curl commands. 
No daemons need to be started or configuration files edited.

If you are using a package based Linux distribution like CentOS or Debian,
you should be able to install the openssl and curl packages if they are
not already present. For example on CentOS:

yum -y install openssl curl

To install HTCondor, please see their page for instructions, and install
the package (RPM etc) of the current stable version:
  https://research.cs.wisc.edu/htcondor/instructions/
You can ignore HTCondor's instructions about editing files in /etc/condor
or starting daemons. Just ensure that you can run the condor_version command.

Finally, you must install the vmcondor_setup script. We recommend you install
it in a subdirectory of your home directory:

mkdir -p $HOME/bin
curl https://vmcondor.iris.ac.uk/latest/vmcondor_setup \
  > $HOME/bin/vmcondor_setup
chmod +x $HOME/bin/vmcondor_setup

Installing HTCondor from a tar file
-----------------------------------

You may be in a situation where OpenSSL and Curl are installed but not 
HTCondor and you can't do a system installation of HTCondor yourself. In 
this case, download the stripped tar.gz file for the stable version of 
HTCondor from https://research.cs.wisc.edu/htcondor/downloads/ 

Unpack the tar.gz file in your $HOME directory and add the bin 
subdirectory of the condor-*-stripped directory to your $PATH. You can
then execute condor commands like condor_version.

Double check that the commands 

openssl version
curl --version

work, and that $HOME/bin is on your $PATH too.

Then download and install the vmcondor_setup command:

curl https://vmcondor.iris.ac.uk/latest/vmcondor_setup \
  > $HOME/bin/vmcondor_setup
chmod +x $HOME/bin/vmcondor_setup

Setting up VMCondor access
--------------------------

With vmcondor_setup in $HOME/bin and that directory on your $PATH, 
execute vmcondor_setup . This creates additonal symbolic links to 
vmcondor_setup in $HOME/bin which provide you with more commands, 
installs some configuration files in $HOME/.vmcondor, and creates your 
unique VMCondor key in $HOME/.vmcondor/vmcondor.key

During this process your VMCondor username will be displayed and you
can check it at any time with vmcondor_version (along with the versions
of VMCondor and HTCondor which are installed.)

To activate your account, send an email to vmcondor@iris.ac.uk stating
  - your VMCondor username
  - your preferred name
  - your home institute
  - your IRIS user community
within the next 7 days.

Submitting jobs
---------------

Once you receive a notification that your VMCondor account has been
approved, you can try out the system with the following example.

Create example.sub like this:

Executable              = example.sh
Output                  = example.out
notification            = never
should_transfer_files   = YES
when_to_transfer_output = ON_EXIT
Universe                = vanilla
+Owner=UNDEFINED
Queue

And create example.sh like this:

#!/bin/sh
date
printenv

Then you can run the job, check its status and then retrieve its output
once it reaches state C ("completed") with:

vmcondor_submit example.sub
 Submitting job(s).
 1 job(s) submitted to cluster 66.

vmcondor_q -nobatch
 -- Schedd: vmcondor@vmcondor.iris.ac.uk : <195.194.108.226:9618?... 
  ID      OWNER            SUBMITTED     RUN_TIME ST PRI SIZE CMD
   66.0   user0026        8/11 23:37   0+00:00:01 C  0    0.0 example.sh
 Total for query: 3 jobs; 3 completed, 0 removed, 0 idle, 0 running, 0 held

vmcondor_transfer_data 66
 Fetching data files...

cat example.out
 USER=cndrusr1
 TEMP=/scratch/condor/dir_6031
 ...
 ...

