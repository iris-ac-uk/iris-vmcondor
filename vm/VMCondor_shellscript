#!/bin/sh
if [ "$1" == "stop" ] ; then exit; fi 

mkdir -p /var/spool/joboutputs
chmod ugo+rwxt /var/spool/joboutputs/

(
# Cloud Init should do this automatically but something has changed since cernvm3 -> cernvm4
ls -l /root/.ssh/authorized_keys
curl http://169.254.169.254/2009-04-04/meta-data/public-keys/0/openssh-key > /root/.ssh/authorized_keys
echo >> /root/.ssh/authorized_keys
ls -l /root/.ssh/authorized_keys

cat <<EOF >/tmp/x509proxy.pem
##user_data_option_x509_proxy##
##user_data_file_hostcert##
##user_data_file_hostkey##
EOF
chown root.root /tmp/x509proxy.pem
chmod 0400 /tmp/x509proxy.pem
openssl x509 -in /tmp/x509proxy.pem -text > /var/spool/joboutputs/x509proxy.cert.pem

job_id=`python -c "import urllib ; print urllib.urlopen('$JOBFEATURES/job_id').read().strip()"`

# Send a heartbeat every 5 minutes
(
while true
do
  echo `cut -f1-3 -d' ' /proc/loadavg` `cat /proc/uptime` >/var/spool/joboutputs/heartbeat
  date --utc +"%Y-%m-%d %H:%M:%S %Z Uploading heartbeat"
  /usr/bin/curl --max-time 30 --capath /etc/grid-security/certificates/ --cert /tmp/x509proxy.pem --cacert /tmp/x509proxy.pem --location --upload-file /var/spool/joboutputs/heartbeat '##user_data_joboutputs_url##/heartbeat'
  date --utc +"%Y-%m-%d %H:%M:%S %Z curl returns $?"
  sleep 300
done
) >/var/log/heartbeat.log 2>&1 &

# Remove docker command etc since we don't start docker
rpm --nodeps -e docker-cernvm

# Hard links to _condor_stdout and _condor_stderr of HTCondor jobs go here
mkdir -p /scratch/joblogs
chmod ugo+wxt,u+r,go-r /scratch/joblogs

wall_limit_secs=`python -c "import urllib ; print urllib.urlopen('$JOBFEATURES/wall_limit_secs').read().strip()"`
if [ "$wall_limit_secs" -gt 0 ] ; then
  date --utc +"%Y-%m-%d %H:%M:%S %Z Set MAXJOBRETIREMENTTIME from \$JOBFEATURES/wall_limit_secs = $wall_limit_secs"
  echo "MAXJOBRETIREMENTTIME = $wall_limit_secs" >>/etc/condor/condor_config.local
fi

# We didn't start at boot time, to allow /tmp/x509proxy.pem creation etc
echo 'START = TRUE' >>/etc/condor/condor_config.local

# In case the VO needs to update Condor configuration with a script
if [ -x /usr/local/bin/condor_config_script ] ; then
  /usr/local/bin/condor_config_script
fi

# Apply the updated configuration
condor_reconfig

# Record final Condor configuration
date --utc +"%Y-%m-%d %H:%M:%S %Z Recording final HTCondor configuration"
condor_config_val -dump >/var/spool/joboutputs/condor_config_val-dump.log

# Wait for condor_startd to start
while ! ps -C condor_startd >/dev/null ; do date --utc +"%Y-%m-%d %H:%M:%S %Z condor_startd not yet started" ; sleep 10 ; done

# In the background, give Condor startd 30 minutes to find a job then tell it to stop after the job (or now!)
# Condor may stop before condor_off is run, due to STARTD_NOCLAIM_SHUTDOWN (600s?)
(sleep 1800 ; while ! condor_off -daemon startd -peaceful ; do sleep 60; done) >/var/spool/joboutputs/condor_off.log 2>&1 &

# Wait for condor_startd to stop
date --utc +"%Y-%m-%d %H:%M:%S %Z Waiting for condor_startd to finish"
while ps -C condor_startd >/dev/null ; do sleep 60 ; done
date --utc +"%Y-%m-%d %H:%M:%S %Z condor_startd finished"
  
# Always try to make simple HTCondor shutdown messages
if [ ! -s /var/log/condor/startd_history ] ; then
  echo '300 No HTCondor job to run' > /var/spool/joboutputs/shutdown_message
else
  echo '200 Success' > /var/spool/joboutputs/shutdown_message
fi

# If VO provides something else, run that too
if [ -x /usr/local/bin/make_shutdown_message ] ; then
  /usr/local/bin/make_shutdown_message
fi

# Time to upload and shutdown
cd /var/spool/joboutputs
cp -f /var/log/condor/* /var/log/cloud-init*.log /scratch/joblogs/* .
for i in * 
do 
  curl --capath /etc/grid-security/certificates/ --cert /tmp/x509proxy.pem --cacert /tmp/x509proxy.pem --location --upload-file "$i" '##user_data_joboutputs_url##/'
  curl --capath /etc/grid-security/certificates/ --cert /tmp/x509proxy.pem --cacert /tmp/x509proxy.pem --location --upload-file "$i" "https://depo.gridpp.ac.uk/hosts/##user_data_space##/##user_data_machinetype##/##user_data_machine_hostname##/$job_id/"
done

# Try normal shutdown
shutdown -h now
sleep 60
# Otherwise instant shutdown
echo o > /proc/sysrq-trigger

) >/var/spool/joboutputs/shellscript.log 2>&1 &
